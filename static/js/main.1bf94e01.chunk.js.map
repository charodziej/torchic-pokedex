{"version":3,"sources":["assets/Torchic1.png","components/ClockComponent/index.js","components/MenuComponent/index.js","components/HomeComponent/HeaderComponent/index.js","components/HomeComponent/AdditionalContent/PokemonOfTheDayComponent/index.js","components/HomeComponent/AdditionalContent/CalendarComponent/index.js","utils/PokemonOfTheDayGen.js","assets/associations.js","components/HomeComponent/AdditionalContent/EffectivenessPreviewComponent/index.js","components/HomeComponent/AdditionalContent/index.js","components/HomeComponent/index.js","components/PokemonComponent/index.js","components/WindowComponent/index.js","components/PokedexComponent/index.js","components/EffectivenessComponent/StyledCellComponent/index.js","components/EffectivenessComponent/index.js","routes/routes.js","components/NotFoundComponent/index.js","routes/RoutesComponent.js","components/AppComponent/index.js","utils/serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","time","Date","toLocaleString","hours","getHours","minutes","getMinutes","seconds","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","Typography","length","React","Component","Menu","AppBar","position","Toolbar","to","IconButton","style","marginRight","Button","letterSpacing","marginLeft","Language","onClick","changeTheme","theme","palette","type","Brightness4","Brightness7","withStyles","withTheme","Header","classes","Container","maxWidth","className","content","src","Torchic1","alt","logo","text","title","textDecoration","color","paddingTop","spacing","paddingBottom","flexDirection","alignItems","textAlign","display","breakpoints","down","flexShrink","height","fontSize","fontWeight","typography","fontWeightLight","lineHeight","fontFamily","PokemonOfTheDay","Card","card","raised","elevation","handleOpen","pokemon","id","CardActionArea","CardMedia","component","width","name","image","img","CardContent","padding","pokeName","subtitle","PureComponent","withRouter","boxShadow","borderRadius","textTransform","Calendar","move","border","next","addition","month","year","changeMonth","date","getMonth","getFullYear","dayOnClick","pushDay","calendar","bgColor","colorrr","current","classStyle","currentCopy","calendarColorPrim","push","backgroundColor","getDate","day","getDay","setDate","i","yearClicked","monthClicked","dayClicked","amber","dayButton","calendarColorSec","Paper","monthHeader","ChevronLeft","ChevronRight","Table","TableBody","map","week","weekIndex","TableRow","key","dayIndex","TableCell","justifyContent","genID","require","md5","dateNum","index","parseInt","label","lightGreen","grey","blue","yellow","pink","red","orange","lightBlue","purple","green","brown","EffectivenessPreview","weaknesses","chartIns","currentPokemon","weakness","Chip","chipStyle","associations","getContrastText","paddingLeft","paddingRight","margin","Additional","history","pokemons","List1","value","description","List2","toString","marginBottom","flexWrap","Home","Pokemon","ref","forwardedRef","inViewport","handleViewport","properties","Window","types","statsArray","candy","candy_count","egg","avg_spawns","Dialog","onClose","open","ifOpen","DialogTitle","dialogHeader","DialogContent","flexGrow","dialogDesc","stats","chipIns","chipOnClick","Pokedex","handleClose","handleChange","event","searching","target","chipClick","handleClear","openPokemon","match","params","FormControl","input","InputLabel","FilledInput","onChange","endAdornment","InputAdornment","pokeWrapper","autoHide","autoHideTimeout","pokeContent","filter","toLowerCase","includes","toLocaleLowerCase","some","maxHeight","overflow","marginTop","StyledCell","borderWidth","borderColor","background","default","borderStyle","verticalAlign","colspan","rowspan","children","EffectivenessChart","Object","keys","effi","header","writingMode","entries","multiplier","Add","Remove","routes","path","exact","NotFound","Routes","Fragment","r","lightTheme","primary","colors","secondary","main","darkTheme","App","localStorage","JSON","stringify","parse","basename","ThemeProvider","createMuiTheme","CssBaseline","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bf94e01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Torchic1.28c52578.png\";","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default class Clock extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n      });\r\n    }\r\n\r\n    render()\r\n    {        \r\n        return (\r\n            <Typography>\r\n                {(this.state.hours.length === 1) ? (\"0\") : (\"\")}{this.state.hours}:\r\n                {(this.state.minutes.length === 1) ? (\"0\") : (\"\")}{this.state.minutes}:\r\n                {(this.state.seconds.length === 1) ? (\"0\") : (\"\")}{this.state.seconds}\r\n            </Typography>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport {AppBar, Button, Toolbar, IconButton, withStyles} from '@material-ui/core';\r\nimport {Home, Language, Brightness7, Brightness4} from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\n/*import ClockLib from 'react-live-clock';*/\r\nimport Clock from '../ClockComponent';\r\n\r\nclass Menu extends React.Component\r\n{\r\n    render() {\r\n        let spacing = 15;\r\n        return(\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Link to='/home'>\r\n                            <IconButton style = {{marginRight: spacing}}>\r\n                                <Home/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to='/pokedex'>\r\n                            <Button style = {{letterSpacing: '1mm', marginRight: spacing}}>\r\n                                Pokédex\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to='/chart'>\r\n                            <Button style = {{letterSpacing: '1mm'}}>\r\n                                Chart\r\n                            </Button>\r\n                        </Link>\r\n                        <IconButton style = {{marginLeft: \"auto\", marginRight: spacing}}>\r\n                            <Language/>\r\n                        </IconButton>\r\n                        <IconButton style = {{marginRight: spacing}} onClick = {this.props.changeTheme}>\r\n                            {(this.props.theme.palette.type === \"light\") ? (<Brightness4/>) : (<Brightness7/>)}\r\n                        </IconButton>\r\n                            {/*<ClockLib format={'HH:mm:ss'} ticking={true} timezone={'PL/Europe'} />*/}\r\n                            <Clock/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles({ }, {withTheme: 1})(Menu);\r\n\r\n","import React from 'react';\r\nimport Torchic1 from '../../../assets/Torchic1.png';\r\nimport {Container} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n\r\n    content: {\r\n        paddingTop: theme.spacing(10),\r\n        paddingBottom: theme.spacing(10),\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            paddingTop: theme.spacing(4),\r\n            paddingBottom: theme.spacing(8),\r\n            textAlign: 'center',\r\n        },\r\n      },\r\n\r\n    logo: {\r\n        flexShrink: 0,\r\n        marginRight: theme.spacing(3),\r\n        height: 200,\r\n        \r\n        [theme.breakpoints.down('md')]: {\r\n            height: 120,\r\n        },\r\n    },\r\n\r\n    text: {\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        lineHeight: '40px',\r\n        textAlign: 'left',\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        }\r\n    },\r\n\r\n    title: {\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        fontSize: 40,\r\n        fontFamily: 'Indie Flower',\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 25,\r\n        }\r\n    }\r\n})\r\n\r\nclass Header extends React.Component\r\n{\r\n    render() {\r\n        const classes = this.props.classes\r\n        return (\r\n            <Container maxWidth='md' className={classes.content}>\r\n                <img src={Torchic1} alt=\"\" className={classes.logo}/>\r\n                <Container className={classes.text}>\r\n                    <h1 className={classes.title}>Torchic Pokédex</h1>\r\n                    Want to know everything about every Pokémon? <br/>\r\n                    Check out our <Link to='/pokedex' style={{textDecoration: 'none', color: \"#ffc107\"}}>Pokédex</Link> - tips &amp; tricks all day!\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Header)","import React from 'react';\r\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    card: {\r\n        width: 250,\r\n        boxShadow: 8,\r\n        borderRadius: 5\r\n    },\r\n\r\n    pokeName: {\r\n        fontSize: 24,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '2.7mm',\r\n        fontFamily: 'Indie Flower',\r\n    },\r\n\r\n    subtitle: {\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '1mm',\r\n    },\r\n})\r\n\r\nclass PokemonOfTheDay extends React.PureComponent {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        return (\r\n            <div>\r\n            <Card \r\n                className={classes.card} \r\n                raised={true} elevation={4} \r\n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\r\n            >\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        style={{width: 150, marginLeft: 'auto', marginRight: 'auto', paddingTop: 10}}\r\n                        alt={this.props.pokemon.name}\r\n                        image={this.props.pokemon.img}  \r\n                    />\r\n                    <CardContent style={{padding: 20}}>\r\n                        <Typography className = {classes.pokeName}>\r\n                            {this.props.pokemon.name}\r\n                        </Typography>\r\n                        <Typography className = {classes.subtitle}>\r\n                            Pokemon Of The Day\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(withStyles(classes)(PokemonOfTheDay))","import React from 'react';\r\nimport {Paper, Table, TableRow, TableCell, IconButton, Typography, TableBody} from '@material-ui/core';\r\nimport {amber} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {ChevronLeft, ChevronRight} from '@material-ui/icons';\r\n\r\nconst classes = theme => ({\r\n    dayButton : {\r\n        width: '20px',\r\n        height: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        fontSize: 16\r\n    },\r\n\r\n    monthHeader: {\r\n        textAlign: 'center',\r\n        fontSize: 32,\r\n        fontFamily: 'Indie Flower',\r\n        padding: 5,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n})\r\n\r\nclass Calendar extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            day: new Date().getDate(),\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n        }\r\n    }\r\n\r\n    move = (border, next, addition) =>\r\n    {\r\n        if(this.state.month===border)\r\n        {\r\n            this.setState({\r\n                year: this.state.year + addition,\r\n                month: next\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                month: this.state.month + addition\r\n            })\r\n        }\r\n    }\r\n\r\n    changeMonth = (date) =>\r\n    {\r\n        this.setState({\r\n            month: date.getMonth(),\r\n            year: date.getFullYear()\r\n        })\r\n\r\n        this.props.dayOnClick(date)\r\n    }\r\n\r\n    pushDay = (calendar, bgColor, colorrr, current, classStyle) =>\r\n    {\r\n        let currentCopy = new Date(current)\r\n        if(colorrr===this.props.theme.palette.calendarColorPrim)\r\n        {\r\n            calendar[calendar.length - 1].push(\r\n                <IconButton\r\n                    style = {{backgroundColor: bgColor}}\r\n                    onClick = {() => this.props.dayOnClick(currentCopy)}>\r\n                    <span className = {classStyle} style={{color: colorrr}}>\r\n                        {current.getDate()}\r\n                    </span>\r\n                </IconButton>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            calendar[calendar.length - 1].push(\r\n                <IconButton\r\n                    style = {{backgroundColor: bgColor}}\r\n                    onClick = {() => this.changeMonth(currentCopy)}>\r\n                    <span className = {classStyle} style={{color: colorrr}}>\r\n                        {current.getDate()}\r\n                    </span>\r\n                </IconButton>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const classes = this.props.classes\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let calendar = [];\r\n        let current = new Date(this.state.year, this.state.month, 1)\r\n\r\n        if(current.getDay()===0)\r\n        {\r\n            current.setDate(current.getDate() - 6)\r\n        }\r\n        else\r\n            current.setDate(current.getDate() - current.getDay() + 1)\r\n\r\n        do\r\n        {\r\n            calendar.push([]);\r\n            for(let i = 0; i<7; ++i)\r\n            {\r\n                if(this.props.yearClicked === current.getFullYear()\r\n                && this.props.monthClicked === current.getMonth()\r\n                && this.props.dayClicked === current.getDate())\r\n                {\r\n                    this.pushDay(calendar, amber[500], \"#ffffff\", current, classes.dayButton)\r\n                }\r\n                else if(new Date().getFullYear() === current.getFullYear()\r\n                && new Date().getMonth() === current.getMonth()\r\n                && new Date().getDate() === current.getDate())\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", amber[500], current, classes.dayButton)\r\n                }\r\n                else if(this.state.month === current.getMonth())\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", this.props.theme.palette.calendarColorPrim, current, classes.dayButton)\r\n                }\r\n                else\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", this.props.theme.palette.calendarColorSec, current, classes.dayButton)\r\n                }\r\n                \r\n                current.setDate(current.getDate() + 1);\r\n            }\r\n        }\r\n        while(this.state.month === current.getMonth());\r\n\r\n        return (\r\n            <Paper style={{maxWidth: 616}}\r\n            elevation={4}>\r\n                <Typography className={classes.monthHeader}>\r\n                    <IconButton onClick={() => this.move(0, 11, -1)}>\r\n                        <ChevronLeft/>\r\n                    </IconButton>\r\n\r\n                    <span style={{width: 150}}>\r\n                        {monthNames[this.state.month]}\r\n                    </span>\r\n\r\n                    <IconButton onClick={() => this.move(11, 0, 1)}>\r\n                        <ChevronRight/>\r\n                    </IconButton>\r\n                </Typography>\r\n                <Table>\r\n                    <TableBody>\r\n                        {calendar.map((week, weekIndex) => (\r\n                            <TableRow key={weekIndex}>\r\n                                {week.map((day, dayIndex) => (\r\n                                    <TableCell key={dayIndex} style={{height: '32px', padding: '5px'}}>{day}</TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, { withTheme: 1 }) (Calendar)\r\n","const genID = (day, month, year) =>\r\n{\r\n    let date\r\n    if(month.length>1)\r\n        date = (day + month + year)\r\n    else\r\n        date = (day + '0' + month + year)\r\n\r\n    const md5 = require('md5');\r\n    date = md5(date)\r\n\r\n    let dateNum = \"0\"\r\n    for (let index = 0; index < date.length; index++)\r\n    {\r\n        if('0' <= date[index] && date[index] <= '9')\r\n            dateNum = dateNum + date[index]\r\n    }\r\n\r\n    dateNum = parseInt(dateNum, 10)\r\n\r\n    return dateNum\r\n}\r\n\r\nexport default genID","import {green, purple, orange, lightBlue, blue, lightGreen, brown, yellow, pink, grey, red} from '@material-ui/core/colors'\r\n\r\nexport default {\r\n    \"Bug\":      {label: \"bug\",      color: lightGreen[500]},\r\n    \"Dark\":     {label: \"dark\",     color: grey[700]},\r\n    \"Dragon\":   {label: \"dragon\",   color: blue[800]},\r\n    \"Electric\": {label: \"electric\", color: yellow[500]},\r\n    \"Fairy\":    {label: \"fairy\",    color: pink[300]},\r\n    \"Fighting\": {label: \"fighting\", color: red[500]},\r\n    \"Fire\":     {label: \"fire\",     color: orange[500]},\r\n    \"Flying\":   {label: \"flying\",   color: lightBlue[500]},\r\n    \"Ghost\":    {label: \"ghost\",    color: purple[900]},\r\n    \"Grass\":    {label: \"grass\",    color: green[500]},\r\n    \"Ground\":   {label: \"ground\",   color: brown[700]},\r\n    \"Ice\":      {label: \"ice\",      color: lightBlue[300]},\r\n    \"Normal\":   {label: \"normal\",   color: brown[300]},\r\n    \"Poison\":   {label: \"poison\",   color: purple[500]},\r\n    \"Psychic\":  {label: \"psychic\",  color: pink[500]},\r\n    \"Rock\":     {label: \"rock\",     color: yellow[800]},\r\n    \"Steel\":    {label: \"steel\",    color: grey[500]},\r\n    \"Water\":    {label: \"water\",    color: blue[500]},\r\n}\r\n","import React from 'react';\r\nimport {Paper, Typography, Chip} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport associations from '../../../../assets/associations';\r\n\r\nconst classes = theme => ({\r\n    title: {\r\n        textAlign: 'center',\r\n        fontSize: 32,\r\n        fontFamily: 'Indie Flower',\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 25,\r\n        paddingRight: 25,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    chartIns: {\r\n        padding: 25,\r\n        paddingTop: 0,\r\n        textAlign: 'center',\r\n        textTransform: 'uppercase',\r\n        letterSpacing: theme.spacing(0.25),\r\n        fontSize: 12,\r\n        lineHeight: theme.spacing(0.5)\r\n    },\r\n\r\n    chipStyle: {\r\n        margin: theme.spacing(0.25),\r\n        letterSpacing: theme.spacing(0.25),\r\n        fontSize: 10,\r\n        textTransform: 'uppercase',\r\n    }\r\n})\r\n\r\nclass EffectivenessPreview extends React.Component {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        let weaknesses = this.props.weaknesses\r\n\r\n        return (\r\n            <Link to=\"/chart\" style={{ textDecoration: 'none' }}>\r\n                <Paper elevation={4} >\r\n                    <Typography className={classes.title}>\r\n                        Effectiveness Chart\r\n                    </Typography>\r\n                    <div className={classes.chartIns}>\r\n                        What's effective against {this.props.currentPokemon.name}?\r\n                            <div>\r\n                            {weaknesses.map((weakness) => (\r\n                            \r\n                            <Chip\r\n                                key={weakness}\r\n                                className = {classes.chipStyle}\r\n                                style={{\r\n                                    backgroundColor: associations[weakness].color,\r\n                                    color: this.props.theme.palette.getContrastText(associations[weakness].color),\r\n                                }}\r\n                                label = {associations[weakness].label}\r\n                            />))}\r\n                            </div>\r\n                        Click here to see the whole chart!\r\n                    </div>\r\n                </Paper>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes, {withTheme: 1})(EffectivenessPreview))\r\n","import React from 'react';\r\nimport PokemonOfTheDay from '../AdditionalContent/PokemonOfTheDayComponent';\r\nimport Calendar from '../AdditionalContent/CalendarComponent';\r\nimport {Container} from '@material-ui/core';\r\nimport List1 from '../../../assets/pokedex.json';\r\nimport List2 from '../../../assets/pokemon.json';\r\nimport genID from '../../../utils/PokemonOfTheDayGen';\r\nimport EffectivenessPreview from './EffectivenessPreviewComponent'\r\n\r\nclass Additional extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.pokemons = List1.map((value, index) => ({\r\n            ...value,\r\n            description: List2[index].description,\r\n        }))\r\n\r\n        this.state = {\r\n\r\n            dayClicked: new Date().getDate(),\r\n            monthClicked: new Date().getMonth(),\r\n            yearClicked: new Date().getFullYear(),\r\n        }\r\n    }\r\n\r\n    dayOnClick = (date) =>\r\n    {\r\n        const dateString = `${date.getFullYear()}${(date.getMonth()<10) ? '0' : ''}${date.getMonth()}${(date.getDate()<10) ? '0' : ''}${date.getDate()}`\r\n\r\n        const todayString = `${new Date().getFullYear()}${(new Date().getMonth()<10) ? '0' : ''}${new Date().getMonth()}${(new Date().getDate()<10) ? '0' : ''}${new Date().getDate()}`\r\n        \r\n        if(dateString<=todayString)\r\n        {\r\n            this.setState({\r\n                dayClicked: date.getDate(),\r\n                monthClicked: date.getMonth(),\r\n                yearClicked: date.getFullYear(),\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    handleOpen = (id) =>\r\n    {\r\n        this.props.history.push('/pokedex/' + id)\r\n    }\r\n\r\n    render() {\r\n        let dateNum = genID(this.state.dayClicked.toString(), this.state.monthClicked.toString(), this.state.yearClicked.toString())\r\n\r\n        let weaknesses = this.pokemons[dateNum % 151].weaknesses\r\n\r\n        return (\r\n            <Container style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly', marginBottom: 30, flexWrap: 'wrap'}}>             \r\n                <div style={{ margin: 16 }}>\r\n                    <PokemonOfTheDay\r\n                        pokemon={this.pokemons[dateNum % 151]}\r\n                        handleOpen={this.handleOpen}\r\n                    />\r\n                </div>\r\n                <div style={{ margin: 16 }}>\r\n                    <Calendar\r\n                        dayClicked={this.state.dayClicked}\r\n                        monthClicked={this.state.monthClicked}\r\n                        yearClicked={this.state.yearClicked}\r\n                        dayOnClick={this.dayOnClick}\r\n                    />\r\n                </div>\r\n                <div style={{ margin: 16 }}>\r\n                    <EffectivenessPreview\r\n                        currentPokemon={this.pokemons[dateNum % 151]}\r\n                        weaknesses={weaknesses}\r\n                    />\r\n                </div>\r\n            </Container> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Additional\r\n","import React from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport Header from './HeaderComponent';\r\nimport Additional from './AdditionalContent';\r\n\r\nclass Home extends React.Component\r\n{\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Header/>\r\n                <Additional/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Home)","import React from 'react';\r\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport handleViewport from 'react-in-viewport'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    card: {\r\n        width: 180,\r\n        margin: 10,\r\n        boxShadow: 8,\r\n        borderRadius: 10\r\n    },\r\n\r\n    pokeName: {\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '1.35mm',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    properties: {\r\n        fontSize: 15,\r\n    }\r\n})\r\n\r\nclass Pokemon extends React.PureComponent {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        return (\r\n            <div ref={this.props.forwardedRef} style={{width: 200, height:250}}>\r\n            {this.props.inViewport &&\r\n            <Card \r\n                className={classes.card} \r\n                raised={true} elevation={4} \r\n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\r\n            >\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt={this.props.pokemon.name}\r\n                        image={this.props.pokemon.img}\r\n                        style={{height: 170}}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography className={classes.pokeName}>\r\n                            {this.props.pokemon.name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card> \r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default handleViewport(withRouter(withStyles(classes)(Pokemon)))","import React from 'react';\r\nimport {Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, Chip} from '@material-ui/core'\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport associations from '../../assets/associations'\r\n\r\nconst classes = theme => ({\r\n    dialogHeader: {\r\n        fontSize: 18,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n\r\n    dialogDesc: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        fontSize: 15,\r\n        textAlign: 'justify',\r\n        lineHeight: theme.spacing(0.2)\r\n    },\r\n\r\n    chipIns: {\r\n        margin: theme.spacing(0.25),\r\n        letterSpacing: theme.spacing(0.25),\r\n        fontSize: 10,\r\n        textTransform: 'uppercase',\r\n    }\r\n})\r\n\r\nclass Window extends React.Component {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        const types = this.props.pokemon.type.map((type) =>\r\n            associations[type]\r\n        )\r\n\r\n        const statsArray = [ ]\r\n        statsArray.push({label: \"Candy\", value: this.props.pokemon.candy})\r\n        if(this.props.pokemon.candy_count)\r\n            statsArray.push({label: \"Candy Count\", value: this.props.pokemon.candy_count})\r\n        statsArray.push({label: \"Egg\", value: this.props.pokemon.egg})\r\n        statsArray.push({label: \"Average Spawns\", value: this.props.pokemon.avg_spawns})\r\n\r\n        return (\r\n            <Dialog onClose={this.props.onClose} open={this.props.ifOpen} >\r\n                <DialogTitle>\r\n                    <span className={classes.dialogHeader}> \r\n                        {this.props.pokemon.name}\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Paper style={{flexGrow: '1'}} className={classes.dialogDesc}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {statsArray.map((stats) =>\r\n                                    <TableRow>\r\n                                        <TableCell>{stats.label}</TableCell>\r\n                                        <TableCell>{stats.value}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>\r\n                        <Paper style={{display: 'flex', flexDirection: \"column\"}} className={classes.dialogDesc}>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <img src={this.props.pokemon.img} alt=\"\"/>\r\n                            </div>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                {types.map((type) =>\r\n                                    <Chip className={classes.chipIns}\r\n                                        label = {type.label}\r\n                                        style={{\r\n                                            backgroundColor: type.color,\r\n                                            color: this.props.theme.palette.getContrastText(type.color)\r\n                                        }}\r\n                                        onClick = {() => this.props.chipOnClick(type.label)}\r\n                                    /> \r\n                                )}\r\n                            </div>\r\n                        </Paper>\r\n                    </div>\r\n                    <Paper className={classes.dialogDesc}>\r\n                        {this.props.pokemon.description}\r\n                    </Paper>\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, {withTheme: 1})(Window)\r\n","import React from 'react';\r\nimport List1 from '../../assets/pokedex.json';\r\nimport List2 from '../../assets/pokemon.json';\r\nimport Pokemon from '../PokemonComponent';\r\nimport {Paper, FilledInput, InputAdornment, IconButton, InputLabel, FormControl} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport Window from '../WindowComponent';\r\nimport {withRouter} from 'react-router-dom';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst classes = theme => ({\r\n    pokeWrapper: {\r\n        maxHeight: 'calc(100vh - 180px)',\r\n        overflow: 'auto',\r\n        margin: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    pokeContent: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(3),\r\n        marginLeft: theme.spacing(10),\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        textTransform: 'uppercase',\r\n    },\r\n\r\n    input: {\r\n        marginLeft: theme.spacing(3),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n})\r\n\r\nclass Pokedex extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.pokemons = List1.map((value, index) => ({\r\n            ...value,\r\n            description: List2[index].description,\r\n        }))\r\n\r\n        this.state = {\r\n            searching: \"\"\r\n        }\r\n    }\r\n\r\n    handleOpen = (id) =>\r\n    {\r\n        this.props.history.push('/pokedex/' + id)\r\n    }\r\n\r\n    handleClose = () =>\r\n    {\r\n        this.props.history.push('/pokedex')\r\n    }\r\n\r\n    handleChange = (event) =>\r\n    {\r\n        this.setState({\r\n            searching: event.target.value\r\n        })\r\n    }\r\n\r\n    chipClick = (label) =>\r\n    {\r\n        this.setState({\r\n            searching: label\r\n        })\r\n\r\n        this.props.history.push('/pokedex');\r\n    }\r\n\r\n    handleClear = () =>\r\n    {\r\n        this.setState({\r\n            searching: \"\" \r\n        })\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes\r\n        let openPokemon = this.props.match.params.id\r\n        let ifOpen = false\r\n        if(openPokemon)\r\n        {\r\n            ifOpen = true;\r\n        }\r\n        else\r\n        {\r\n            openPokemon = 1;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <FormControl className={classes.input}>\r\n                    <InputLabel style={{marginLeft: \"20px\"}}>Search</InputLabel>\r\n                    <FilledInput\r\n                        value={this.state.searching}\r\n                        onChange={this.handleChange}\r\n                        margin=\"none\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick = {this.handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                \r\n                <div className={classes.pokeWrapper}>\r\n                    <Scrollbars\r\n                        autoHide\r\n                        autoHideTimeout={1000}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"calc(100vh - 180px)\",\r\n                        }} \r\n                    >\r\n                        <Paper className={classes.pokeContent}>\r\n                            {this.pokemons.filter((pokemon) => (pokemon.name.toLowerCase().includes(this.state.searching.toLocaleLowerCase()) || pokemon.type.some((type) => type.toLowerCase().includes(this.state.searching.toLocaleLowerCase())))).map((pokemon) => (\r\n                                <Pokemon key = {pokemon.id} pokemon={pokemon} handleOpen={this.handleOpen}/>\r\n                            ))}\r\n                        </Paper>\r\n                    </Scrollbars>\r\n                    <Window\r\n                        pokemon={this.pokemons[openPokemon]}\r\n                        ifOpen={ifOpen}\r\n                        onClose={this.handleClose}\r\n                        chipOnClick={this.chipClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(Pokedex))","import React from 'react'\r\n/*import {TableCell} from '@material-ui/core'*/\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst classes = theme => ({\r\n    \r\n})\r\n\r\nclass StyledCell extends React.Component {\r\n    render() {\r\n        return (\r\n            <td\r\n                style={{\r\n                    borderWidth: 4,\r\n                    borderColor: this.props.theme.palette.background.default,\r\n                    borderStyle: 'solid',\r\n                    borderRadius: 15,\r\n                    padding: 10,\r\n                    textAlign: \"center\",\r\n                    verticalAlign: \"middle\",\r\n                    ...this.props.style\r\n                }}\r\n                colspan={this.props.colspan}\r\n                rowspan={this.props.rowspan}\r\n                className={this.props.className}\r\n            >\r\n                {this.props.children}\r\n            </td>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, {withTheme: 1})(StyledCell)","import React from 'react';\r\n/*import {Table, TableRow} from '@material-ui/core'*/\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport StyledCell from './StyledCellComponent'\r\nimport effi from '../../assets/type_effectiveness.json';\r\nimport associations from '../../assets/associations';\r\nimport {Remove, Add} from '@material-ui/icons';\r\nimport {green, red, grey} from '@material-ui/core/colors';\r\n\r\nconst classes = theme => ({\r\n    header: {\r\n        textAlign: 'center',\r\n        backgroundColor: (theme.palette.type === \"dark\") ? \r\n            grey[300] : \r\n            grey[800],\r\n        \r\n        color: theme.palette.getContrastText((theme.palette.type === \"dark\") ? \r\n            grey[300] : \r\n            grey[800]),\r\n    }\r\n})\r\n\r\nclass EffectivenessChart extends React.Component {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        const tableSize = 1250\r\n        \r\n        return (\r\n            <div style={{ overflow: \"auto\", height: \"calc(100vh - 64px)\" }}>\r\n                <table style={{width: tableSize, height: tableSize}}>\r\n                    <tr>\r\n                        <StyledCell colspan={2} rowspan={2}></StyledCell>\r\n                        <StyledCell \r\n                            colspan={Object.keys(effi).length}\r\n                            className={classes.header}\r\n                            style={{height: 60}}\r\n                        >\r\n                            Defense\r\n                        </StyledCell>\r\n                    </tr>\r\n                    <tr>\r\n                        {Object.keys(effi).map((key) =>\r\n                            <StyledCell \r\n                                style={{\r\n                                    backgroundColor: associations[key].color,\r\n                                    color: this.props.theme.palette.getContrastText(associations[key].color),\r\n                                    writingMode: 'sideways-lr',\r\n                                    height: 95\r\n                                }}\r\n                            >\r\n                                {key}\r\n                            </StyledCell>\r\n                        )}\r\n                    </tr>\r\n                    {Object.entries(effi).map(([key, value], index) =>\r\n                        <tr>\r\n                            \r\n                            {(index === 0) &&\r\n                                <StyledCell\r\n                                    rowspan={Object.keys(effi).length}\r\n                                    style={{writingMode: 'sideways-lr', width: 60 }}\r\n                                    className={classes.header}\r\n                                >\r\n                                    Attack\r\n                                </StyledCell>\r\n                            }\r\n\r\n                            <StyledCell style={{\r\n                                backgroundColor: associations[key].color,\r\n                                color: this.props.theme.palette.getContrastText(associations[key].color),\r\n                                width: 95\r\n                            }}>\r\n                                {key}\r\n                            </StyledCell>\r\n                            \r\n                            {Object.entries(value).map(([type, multiplier]) =>\r\n                                <StyledCell style={{ \r\n                                        backgroundColor: ((multiplier === \"1\") ? \r\n                                            ((this.props.theme.palette.type === \"dark\") ? \r\n                                                grey[800] : \r\n                                                grey[300]\r\n                                            ) : \r\n                                            ((multiplier > 1) ? \r\n                                                green[400] : \r\n                                                red[400]\r\n                                            )\r\n                                        ),\r\n                                        textAlign: 'center',\r\n                                        verticalAlign: 'middle',\r\n                                    }}>\r\n                                    {((multiplier !== \"1\") && ((multiplier > 1) ? (<Add/>) : (<Remove/>)))}\r\n                                </StyledCell>\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, {withTheme: 1})(EffectivenessChart)\r\n\r\n","import Home from '../components/HomeComponent';\r\nimport Pokedex from '../components/PokedexComponent';\r\nimport EffectivenessChart from '../components/EffectivenessComponent';\r\n\r\nconst routes = [\r\n    {path: '/home', component: Home},\r\n    {path: '/pokedex/:id?', component: Pokedex, exact: false},\r\n    {path: '/chart', component: EffectivenessChart},\r\n]\r\n\r\nexport {routes}","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Spadaj Dziadu\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {routes} from './routes';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport NotFound from '../components/NotFoundComponent'\r\n\r\nexport default class Routes extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    {routes.map(r => (\r\n                        <Route\r\n                            key = {r.path}\r\n                            exact = {r.exact}\r\n                            path = {r.path}\r\n                            component = {r.component}\r\n                        />\r\n                    ))}\r\n\r\n                    <Route exact path = '/404' component = {NotFound}/>\r\n                    <Route exact path = '/'>\r\n                        <Redirect to = '/home'/>\r\n                    </Route>\r\n                    <Route path = \"*\">\r\n                        <Redirect to = '/404' />\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Menu from '../MenuComponent'\r\nimport Routes from '../../routes/RoutesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { colors, CssBaseline } from '@material-ui/core';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst lightTheme = {\r\n    palette: {\r\n        type: \"light\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        },\r\n        calendarColorPrim: colors.grey[700],\r\n        calendarColorSec: colors.grey[400]\r\n    }\r\n}\r\n\r\nconst darkTheme = {\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        },\r\n        calendarColorPrim: colors.grey[400],\r\n        calendarColorSec: colors.grey[700]\r\n    }\r\n}\r\n\r\nexport default class App extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            theme: { ...lightTheme, ...JSON.parse(localStorage.theme || \"{}\") }\r\n        }\r\n    }\r\n\r\n    changeTheme = () =>\r\n    {\r\n        if(this.state.theme === darkTheme)\r\n        {\r\n            this.setState({\r\n                theme: lightTheme\r\n            })\r\n\r\n            localStorage.theme = JSON.stringify(lightTheme)\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                theme: darkTheme\r\n            })\r\n\r\n            localStorage.theme = JSON.stringify(darkTheme)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Router basename=\"/torchic-pokedex\">\r\n            <ThemeProvider theme={createMuiTheme(this.state.theme)}>\r\n            <CssBaseline/>\r\n                <Menu changeTheme={this.changeTheme}/>\r\n                <Routes/>\r\n            </ThemeProvider>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/AppComponent';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}