{"version":3,"sources":["assets/Torchic1.png","components/ClockComponent/index.js","components/MenuComponent/index.js","components/HomeComponent/HeaderComponent/index.js","components/HomeComponent/index.js","components/PokemonComponent/index.js","components/WindowComponent/index.js","components/PokedexComponent/index.js","routes/routes.js","components/NotFoundComponent/index.js","routes/RoutesComponent.js","components/AppComponent/index.js","utils/serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","time","Date","toLocaleString","hours","getHours","minutes","getMinutes","seconds","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","Typography","length","React","Component","Menu","AppBar","position","Toolbar","to","IconButton","style","marginRight","Button","letterSpacing","marginLeft","Language","onClick","changeTheme","theme","palette","type","Brightness4","Brightness7","withStyles","withTheme","Header","classes","Container","maxWidth","className","content","src","Torchic1","alt","logo","text","title","textDecoration","color","paddingTop","spacing","paddingBottom","flexDirection","alignItems","textAlign","display","breakpoints","down","flexShrink","height","fontSize","fontWeight","typography","fontWeightLight","lineHeight","Home","Pokemon","Card","card","raised","elevation","handleOpen","pokemon","id","CardActionArea","CardMedia","component","name","image","img","CardContent","pokeName","PureComponent","width","margin","padding","boxShadow","borderRadius","textTransform","properties","Window","associations","label","lightGreen","grey","blue","yellow","pink","red","orange","lightBlue","purple","green","brown","types","map","statsArray","push","value","candy","candy_count","egg","avg_spawns","Dialog","onClose","open","ifOpen","DialogTitle","dialogHeader","DialogContent","Paper","flexGrow","dialogDesc","Table","TableBody","stats","TableRow","TableCell","justifyContent","Chip","chipIns","backgroundColor","getContrastText","description","Pokedex","openPokemon","handleClose","handleChange","event","searching","target","pokemons","List1","index","List2","TextField","input","onChange","pokeWrapper","autoHide","autoHideTimeout","pokeContent","filter","toLowerCase","includes","toLocaleLowerCase","some","key","routes","path","maxHeight","overflow","marginBottom","flexWrap","marginTop","NotFound","Routes","Fragment","r","exact","lightTheme","createMuiTheme","primary","colors","secondary","main","darkTheme","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2aae559c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Torchic1.28c52578.png\";","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default class Clock extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n      });\r\n    }\r\n\r\n    render()\r\n    {        \r\n        return (\r\n            <Typography>\r\n                {(this.state.hours.length === 1) ? (\"0\") : (\"\")}{this.state.hours}:\r\n                {(this.state.minutes.length === 1) ? (\"0\") : (\"\")}{this.state.minutes}:\r\n                {(this.state.seconds.length === 1) ? (\"0\") : (\"\")}{this.state.seconds}\r\n            </Typography>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography, IconButton, withStyles} from '@material-ui/core';\r\nimport {Home, Language, Brightness7, Brightness4} from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\n/*import ClockLib from 'react-live-clock';*/\r\nimport Clock from '../ClockComponent';\r\n\r\nclass Menu extends React.Component\r\n{\r\n    render() {\r\n        let spacing = 15;\r\n        return(\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Link to='/home'>\r\n                            <IconButton style = {{marginRight: spacing}}>\r\n                                <Home/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to='/pokedex'>\r\n                            <Button style = {{letterSpacing: '1mm'}}>\r\n                                Pokédex\r\n                            </Button>\r\n                        </Link>\r\n                        <IconButton style = {{marginLeft: \"auto\", marginRight: spacing}}>\r\n                            <Language/>\r\n                        </IconButton>\r\n                        <IconButton style = {{marginRight: spacing}} onClick = {this.props.changeTheme}>\r\n                            {(this.props.theme.palette.type === \"light\") ? (<Brightness4/>) : (<Brightness7/>)}\r\n                        </IconButton>\r\n                        <Typography>\r\n                            {/*<ClockLib format={'HH:mm:ss'} ticking={true} timezone={'PL/Europe'} />*/}\r\n                            <Clock/>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles({ }, {withTheme: 1})(Menu);\r\n\r\n","import React from 'react';\r\nimport Torchic1 from '../../../assets/Torchic1.png';\r\nimport {Container} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n\r\n    content: {\r\n        paddingTop: theme.spacing(10),\r\n        paddingBottom: theme.spacing(10),\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            paddingTop: theme.spacing(4),\r\n            paddingBottom: theme.spacing(8),\r\n            textAlign: 'center',\r\n        },\r\n      },\r\n\r\n    logo: {\r\n        flexShrink: 0,\r\n        marginRight: theme.spacing(3),\r\n        height: 200,\r\n        \r\n        [theme.breakpoints.down('md')]: {\r\n            height: 120,\r\n        },\r\n    },\r\n\r\n    text: {\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        lineHeight: '40px',\r\n        textAlign: 'left',\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        }\r\n    },\r\n\r\n    title: {\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        fontSize: 40,\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 25,\r\n        }\r\n    }\r\n})\r\n\r\nclass Header extends React.Component\r\n{\r\n    render() {\r\n        const classes = this.props.classes\r\n        return (\r\n            <Container maxWidth='md' className={classes.content}>\r\n                <img src={Torchic1} alt=\"\" className={classes.logo}/>\r\n                <Container className={classes.text}>\r\n                    <h1 className={classes.title}>Torchic Pokédex</h1>\r\n                    Want to know everything about every Pokémon? <br/>\r\n                    Check out our <Link to='/pokedex' style={{textDecoration: 'none', color: \"#ffc107\"}}>Pokédex</Link> - tips &amp; tricks all day!\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Header)","import React from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport Header from './HeaderComponent';\r\n\r\nclass Home extends React.Component\r\n{\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Header/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Home)","import React from 'react';\r\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst classes = theme => ({\r\n    card: {\r\n        width: 180,\r\n        margin: 10,\r\n        padding: 5,\r\n        boxShadow: 8,\r\n        borderRadius: 10\r\n    },\r\n\r\n    pokeName: {\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '1.35mm',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    properties: {\r\n        fontSize: 15,\r\n    }\r\n})\r\n\r\nclass Pokemon extends React.PureComponent {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        return (\r\n            <div>\r\n            <Card \r\n                className={classes.card} \r\n                raised={true} elevation={4} \r\n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\r\n            >\r\n                <CardActionArea>\r\n                    <div style={{height: 170}}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt={this.props.pokemon.name}\r\n                        image={this.props.pokemon.img}\r\n                        \r\n                    />\r\n                    </div>\r\n                    <CardContent>\r\n                        <Typography className={classes.pokeName}>\r\n                            {this.props.pokemon.name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(classes)(Pokemon)","import React from 'react';\r\nimport {Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, Chip} from '@material-ui/core'\r\nimport {green, purple, orange, lightBlue, blue, lightGreen, brown, yellow, pink, grey, red} from '@material-ui/core/colors'\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst classes = theme => ({\r\n    dialogHeader: {\r\n        fontSize: 18,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n\r\n    dialogDesc: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        fontSize: 15,\r\n        textAlign: 'justify',\r\n        lineHeight: theme.spacing(0.2)\r\n    },\r\n\r\n    chipIns: {\r\n        margin: theme.spacing(0.25),\r\n        letterSpacing: theme.spacing(0.25),\r\n        fontSize: 10,\r\n        textTransform: 'uppercase',\r\n    }\r\n})\r\n\r\nclass Window extends React.Component {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        const associations = {\r\n            \"Bug\":      {label: \"bug\",      color: lightGreen[500]},\r\n            \"Dark\":     {label: \"dark\",     color: grey[800]},\r\n            \"Dragon\":   {label: \"dragon\",   color: blue[800]},\r\n            \"Electric\": {label: \"electric\", color: yellow[500]},\r\n            \"Fairy\":    {label: \"fairy\",    color: pink[300]},\r\n            \"Fighting\": {label: \"fighting\", color: red[500]},\r\n            \"Fire\":     {label: \"fire\",     color: orange[500]},\r\n            \"Flying\":   {label: \"flying\",   color: lightBlue[500]},\r\n            \"Ghost\":    {label: \"ghost\",    color: purple[900]},\r\n            \"Grass\":    {label: \"grass\",    color: green[500]},\r\n            \"Ground\":   {label: \"ground\",   color: brown[700]},\r\n            \"Ice\":      {label: \"ice\",      color: lightBlue[300]},\r\n            \"Normal\":   {label: \"normal\",   color: brown[300]},\r\n            \"Poison\":   {label: \"poison\",   color: purple[500]},\r\n            \"Psychic\":  {label: \"psychic\",  color: pink[500]},\r\n            \"Rock\":     {label: \"rock\",     color: yellow[800]},\r\n            \"Water\":    {label: \"water\",    color: blue[500]},\r\n        }\r\n\r\n        const types = this.props.pokemon.type.map((type) =>\r\n            associations[type]\r\n        )\r\n\r\n        const statsArray = [ ]\r\n        statsArray.push({label: \"Candy\", value: this.props.pokemon.candy})\r\n        if(this.props.pokemon.candy_count)\r\n            statsArray.push({label: \"Candy Count\", value: this.props.pokemon.candy_count})\r\n        statsArray.push({label: \"Egg\", value: this.props.pokemon.egg})\r\n        statsArray.push({label: \"Average Spawns\", value: this.props.pokemon.avg_spawns})\r\n\r\n        return (\r\n            <Dialog onClose={this.props.onClose} open={this.props.ifOpen} >\r\n                <DialogTitle>\r\n                    <span className={classes.dialogHeader}> \r\n                        {this.props.pokemon.name}\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Paper style={{flexGrow: '1'}} className={classes.dialogDesc}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {statsArray.map((stats) =>\r\n                                    <TableRow>\r\n                                        <TableCell>{stats.label}</TableCell>\r\n                                        <TableCell>{stats.value}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>\r\n                        <Paper style={{display: 'flex', flexDirection: \"column\"}} className={classes.dialogDesc}>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <img src={this.props.pokemon.img} alt=\"\"/>\r\n                            </div>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                {types.map((type) =>\r\n                                    <Chip className={classes.chipIns}\r\n                                        label = {type.label}\r\n                                        style={{\r\n                                            backgroundColor: type.color,\r\n                                            color: this.props.theme.palette.getContrastText(type.color)\r\n                                        }}\r\n                                    /> \r\n                                )}\r\n                            </div>\r\n                        </Paper>\r\n                    </div>\r\n                    <Paper className={classes.dialogDesc}>\r\n                        {this.props.pokemon.description}\r\n                    </Paper>\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, {withTheme: 1})(Window)\r\n","import React from 'react';\r\nimport List1 from '../../assets/pokedex.json';\r\nimport List2 from '../../assets/pokemon.json';\r\nimport Pokemon from '../PokemonComponent';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport Window from '../WindowComponent';\r\n\r\nconst classes = theme => ({\r\n    pokeWrapper: {\r\n        maxHeight: 'calc(100vh - 128px)',\r\n        overflow: 'auto',\r\n        margin: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    pokeContent: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(3),\r\n        marginLeft: theme.spacing(10),\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        textTransform: 'uppercase',\r\n    },\r\n\r\n    input: {\r\n        marginLeft: theme.spacing(3),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n})\r\n\r\nclass Pokedex extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.pokemons = List1.map((value, index) => ({\r\n            ...value,\r\n            description: List2[index].description,\r\n        }))\r\n\r\n        this.state = {\r\n            ifOpen: false,\r\n            openPokemon: 1,\r\n            searching: \"\"\r\n        }\r\n    }\r\n\r\n    handleOpen = (id) =>\r\n    {\r\n        this.setState({\r\n            ifOpen: true,\r\n            openPokemon: id\r\n        })\r\n    }\r\n\r\n    handleClose = () =>\r\n    {\r\n        this.setState({\r\n            ifOpen: false\r\n        })\r\n    }\r\n\r\n    handleChange = (event) =>\r\n    {\r\n        this.setState({\r\n            searching: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    label=\"Search\"\r\n                    value={this.state.searching}\r\n                    onChange={this.handleChange}\r\n                />\r\n                \r\n                <div className={classes.pokeWrapper}>\r\n                    <Scrollbars\r\n                        autoHide\r\n                        autoHideTimeout={1000}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"calc(100vh - 162px)\",\r\n                        }} \r\n                    >\r\n                        <Paper className={classes.pokeContent}>\r\n                            {this.pokemons.filter((pokemon) => (pokemon.name.toLowerCase().includes(this.state.searching.toLocaleLowerCase()) || pokemon.type.some((type) => type.toLowerCase().includes(this.state.searching.toLocaleLowerCase())))).map((pokemon) => (\r\n                                <Pokemon key = {pokemon.id} pokemon={pokemon} handleOpen={this.handleOpen}/>\r\n                            ))}\r\n                        </Paper>\r\n                    </Scrollbars>\r\n                    <Window\r\n                        pokemon={this.pokemons[this.state.openPokemon]}\r\n                        ifOpen={this.state.ifOpen}\r\n                        onClose={this.handleClose}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Pokedex)","import Home from '../components/HomeComponent';\r\nimport Pokedex from '../components/PokedexComponent';\r\n\r\nconst routes = [\r\n    {path: '/home', component: Home},\r\n    {path: '/pokedex', component: Pokedex}\r\n]\r\n\r\nexport {routes}","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Spadaj Dziadu\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {routes} from './routes';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport NotFound from '../components/NotFoundComponent'\r\n\r\nexport default class Routes extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    {routes.map(r => (\r\n                        <Route\r\n                            key = {r.path}\r\n                            exact\r\n                            path = {r.path}\r\n                            component = {r.component}\r\n                        />\r\n                    ))}\r\n\r\n                    <Route exact path = '/404' component = {NotFound}/>\r\n                    <Route exact path = '/'>\r\n                        <Redirect to = '/home'/>\r\n                    </Route>\r\n                    <Route path = \"*\">\r\n                        <Redirect to = '/404' />\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Menu from '../MenuComponent'\r\nimport Routes from '../../routes/RoutesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { colors, CssBaseline } from '@material-ui/core';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        }\r\n    }\r\n})\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        }\r\n    }\r\n})\r\n\r\nexport default class App extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            theme: lightTheme\r\n        }\r\n    }\r\n\r\n    changeTheme = () =>\r\n    {\r\n        if(this.state.theme === darkTheme)\r\n        {\r\n            this.setState({\r\n                theme: lightTheme\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                theme: darkTheme\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Router >\r\n            <ThemeProvider theme={this.state.theme}>\r\n            <CssBaseline/>\r\n                <Menu changeTheme={this.changeTheme}/>\r\n                <Routes/>\r\n            </ThemeProvider>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/AppComponent';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}