{"version":3,"sources":["assets/Torchic1.png","components/ClockComponent/index.js","components/MenuComponent/index.js","components/HomeComponent/HeaderComponent/index.js","components/HomeComponent/AdditionalContent/PokemonOfTheDayComponent/index.js","components/HomeComponent/AdditionalContent/CalendarComponent/index.js","utils/PokemonOfTheDayGen.js","components/HomeComponent/AdditionalContent/index.js","components/HomeComponent/index.js","components/PokemonComponent/index.js","components/WindowComponent/index.js","components/PokedexComponent/index.js","routes/routes.js","components/NotFoundComponent/index.js","routes/RoutesComponent.js","components/AppComponent/index.js","utils/serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","time","Date","toLocaleString","hours","getHours","minutes","getMinutes","seconds","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","Typography","length","React","Component","Menu","AppBar","position","Toolbar","to","IconButton","style","marginRight","Button","letterSpacing","marginLeft","Language","onClick","changeTheme","theme","palette","type","Brightness4","Brightness7","withStyles","withTheme","Header","classes","Container","maxWidth","className","content","src","Torchic1","alt","logo","text","title","textDecoration","color","paddingTop","spacing","paddingBottom","flexDirection","alignItems","textAlign","display","breakpoints","down","flexShrink","height","fontSize","fontWeight","typography","fontWeightLight","lineHeight","fontFamily","PokemonOfTheDay","Card","card","raised","elevation","handleOpen","pokemon","id","CardActionArea","CardMedia","component","width","name","image","img","CardContent","padding","pokeName","subtitle","PureComponent","withRouter","boxShadow","borderRadius","textTransform","Calendar","move","border","next","addition","month","year","changeMonth","date","getMonth","dayOnClick","pushDay","calendar","bgColor","colorrr","current","classStyle","currentCopy","calendarColorPrim","push","backgroundColor","getDate","day","getFullYear","getDay","setDate","i","yearClicked","monthClicked","dayClicked","amber","dayButton","calendarColorSec","Paper","monthHeader","ChevronLeft","ChevronRight","Table","map","week","TableRow","TableCell","justifyContent","genID","require","md5","dateNum","index","parseInt","Additional","dateString","todayString","console","log","history","pokemons","List1","value","description","List2","Home","Pokemon","margin","properties","Window","associations","label","lightGreen","grey","blue","yellow","pink","red","orange","lightBlue","purple","green","brown","types","statsArray","candy","candy_count","egg","avg_spawns","Dialog","onClose","open","ifOpen","DialogTitle","dialogHeader","DialogContent","flexGrow","dialogDesc","TableBody","stats","Chip","chipIns","getContrastText","chipOnClick","Pokedex","handleClose","handleChange","event","searching","target","chipClick","handleClear","openPokemon","match","params","FormControl","input","InputLabel","FilledInput","onChange","endAdornment","InputAdornment","pokeWrapper","autoHide","autoHideTimeout","pokeContent","filter","toLowerCase","includes","toLocaleLowerCase","some","key","routes","path","maxHeight","overflow","marginBottom","flexWrap","marginTop","exact","NotFound","Routes","Fragment","r","lightTheme","createMuiTheme","primary","colors","secondary","main","darkTheme","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b76de85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Torchic1.28c52578.png\";","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default class Clock extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString(),\r\n            hours: new Date().getHours().toLocaleString(),\r\n            minutes: new Date().getMinutes().toLocaleString(),\r\n            seconds: new Date().getSeconds().toLocaleString()\r\n      });\r\n    }\r\n\r\n    render()\r\n    {        \r\n        return (\r\n            <Typography>\r\n                {(this.state.hours.length === 1) ? (\"0\") : (\"\")}{this.state.hours}:\r\n                {(this.state.minutes.length === 1) ? (\"0\") : (\"\")}{this.state.minutes}:\r\n                {(this.state.seconds.length === 1) ? (\"0\") : (\"\")}{this.state.seconds}\r\n            </Typography>\r\n      );\r\n    }\r\n  }","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography, IconButton, withStyles} from '@material-ui/core';\r\nimport {Home, Language, Brightness7, Brightness4} from '@material-ui/icons';\r\nimport {Link} from 'react-router-dom';\r\n/*import ClockLib from 'react-live-clock';*/\r\nimport Clock from '../ClockComponent';\r\n\r\nclass Menu extends React.Component\r\n{\r\n    render() {\r\n        let spacing = 15;\r\n        return(\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Link to='/home'>\r\n                            <IconButton style = {{marginRight: spacing}}>\r\n                                <Home/>\r\n                            </IconButton>\r\n                        </Link>\r\n                        <Link to='/pokedex'>\r\n                            <Button style = {{letterSpacing: '1mm'}}>\r\n                                Pokédex\r\n                            </Button>\r\n                        </Link>\r\n                        <IconButton style = {{marginLeft: \"auto\", marginRight: spacing}}>\r\n                            <Language/>\r\n                        </IconButton>\r\n                        <IconButton style = {{marginRight: spacing}} onClick = {this.props.changeTheme}>\r\n                            {(this.props.theme.palette.type === \"light\") ? (<Brightness4/>) : (<Brightness7/>)}\r\n                        </IconButton>\r\n                        <Typography>\r\n                            {/*<ClockLib format={'HH:mm:ss'} ticking={true} timezone={'PL/Europe'} />*/}\r\n                            <Clock/>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles({ }, {withTheme: 1})(Menu);\r\n\r\n","import React from 'react';\r\nimport Torchic1 from '../../../assets/Torchic1.png';\r\nimport {Container} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n\r\n    content: {\r\n        paddingTop: theme.spacing(10),\r\n        paddingBottom: theme.spacing(10),\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n\r\n        [theme.breakpoints.down('md')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            paddingTop: theme.spacing(4),\r\n            paddingBottom: theme.spacing(8),\r\n            textAlign: 'center',\r\n        },\r\n      },\r\n\r\n    logo: {\r\n        flexShrink: 0,\r\n        marginRight: theme.spacing(3),\r\n        height: 200,\r\n        \r\n        [theme.breakpoints.down('md')]: {\r\n            height: 120,\r\n        },\r\n    },\r\n\r\n    text: {\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        lineHeight: '40px',\r\n        textAlign: 'left',\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 15,\r\n            textAlign: 'center',\r\n        }\r\n    },\r\n\r\n    title: {\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        fontSize: 40,\r\n        fontFamily: 'Indie Flower',\r\n\r\n        [theme.breakpoints.down('md')]:{\r\n            fontSize: 25,\r\n        }\r\n    }\r\n})\r\n\r\nclass Header extends React.Component\r\n{\r\n    render() {\r\n        const classes = this.props.classes\r\n        return (\r\n            <Container maxWidth='md' className={classes.content}>\r\n                <img src={Torchic1} alt=\"\" className={classes.logo}/>\r\n                <Container className={classes.text}>\r\n                    <h1 className={classes.title}>Torchic Pokédex</h1>\r\n                    Want to know everything about every Pokémon? <br/>\r\n                    Check out our <Link to='/pokedex' style={{textDecoration: 'none', color: \"#ffc107\"}}>Pokédex</Link> - tips &amp; tricks all day!\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes)(Header)","import React from 'react';\r\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    card: {\r\n        width: 250,\r\n        boxShadow: 8,\r\n        borderRadius: 5\r\n    },\r\n\r\n    pokeName: {\r\n        fontSize: 24,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '2.7mm',\r\n        fontFamily: 'Indie Flower',\r\n    },\r\n\r\n    subtitle: {\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '1mm',\r\n    },\r\n})\r\n\r\nclass PokemonOfTheDay extends React.PureComponent {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        return (\r\n            <div>\r\n            <Card \r\n                className={classes.card} \r\n                raised={true} elevation={4} \r\n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\r\n            >\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        style={{width: 150, marginLeft: 'auto', marginRight: 'auto', paddingTop: 10}}\r\n                        alt={this.props.pokemon.name}\r\n                        image={this.props.pokemon.img}  \r\n                    />\r\n                    <CardContent style={{padding: 20}}>\r\n                        <Typography className = {classes.pokeName}>\r\n                            {this.props.pokemon.name}\r\n                        </Typography>\r\n                        <Typography className = {classes.subtitle}>\r\n                            Pokemon Of The Day\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(withStyles(classes)(PokemonOfTheDay))","import React from 'react';\r\nimport {Paper, Table, TableRow, TableCell, IconButton, Typography} from '@material-ui/core';\r\nimport {amber} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {ChevronLeft, ChevronRight} from '@material-ui/icons';\r\n\r\nconst classes = theme => ({\r\n    dayButton : {\r\n        width: '20px',\r\n        height: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        fontSize: 16\r\n    },\r\n\r\n    monthHeader: {\r\n        textAlign: 'center',\r\n        fontSize: 32,\r\n        fontFamily: 'Indie Flower',\r\n        padding: 5,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n})\r\n\r\nclass Calendar extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            day: new Date().getDate(),\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n        }\r\n    }\r\n\r\n    move = (border, next, addition) =>\r\n    {\r\n        if(this.state.month===border)\r\n        {\r\n            this.setState({\r\n                year: this.state.year + addition,\r\n                month: next\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                month: this.state.month + addition\r\n            })\r\n        }\r\n    }\r\n\r\n    changeMonth = (date) =>\r\n    {\r\n        this.setState({\r\n            month: date.getMonth()\r\n        })\r\n\r\n        this.props.dayOnClick(date)\r\n    }\r\n\r\n    pushDay = (calendar, bgColor, colorrr, current, classStyle) =>\r\n    {\r\n        let currentCopy = new Date(current)\r\n        if(colorrr===this.props.theme.palette.calendarColorPrim)\r\n        {\r\n            calendar[calendar.length - 1].push(\r\n                <IconButton\r\n                    style = {{backgroundColor: bgColor}}\r\n                    onClick = {() => this.props.dayOnClick(currentCopy)}>\r\n                    <span className = {classStyle} style={{color: colorrr}}>\r\n                        {current.getDate()}\r\n                    </span>\r\n                </IconButton>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            calendar[calendar.length - 1].push(\r\n                <IconButton\r\n                    style = {{backgroundColor: bgColor}}\r\n                    onClick = {() => this.changeMonth(currentCopy)}>\r\n                    <span className = {classStyle} style={{color: colorrr}}>\r\n                        {current.getDate()}\r\n                    </span>\r\n                </IconButton>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const classes = this.props.classes\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let calendar = [];\r\n        let current = new Date(this.state.year, this.state.month, 1)\r\n\r\n        if(current.getDay()===0)\r\n        {\r\n            current.setDate(current.getDate() - 6)\r\n        }\r\n        else\r\n            current.setDate(current.getDate() - current.getDay() + 1)\r\n\r\n        do\r\n        {\r\n            calendar.push([]);\r\n            for(let i = 0; i<7; ++i)\r\n            {\r\n                if(this.props.yearClicked === current.getFullYear()\r\n                && this.props.monthClicked === current.getMonth()\r\n                && this.props.dayClicked === current.getDate())\r\n                {\r\n                    this.pushDay(calendar, amber[500], \"#ffffff\", current, classes.dayButton)\r\n                }\r\n                else if(new Date().getFullYear() === current.getFullYear()\r\n                && new Date().getMonth() === current.getMonth()\r\n                && new Date().getDate() === current.getDate())\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", amber[500], current, classes.dayButton)\r\n                }\r\n                else if(this.state.month === current.getMonth())\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", this.props.theme.palette.calendarColorPrim, current, classes.dayButton)\r\n                }\r\n                else\r\n                {\r\n                    this.pushDay(calendar, \"transparent\", this.props.theme.palette.calendarColorSec, current, classes.dayButton)\r\n                }\r\n                \r\n                current.setDate(current.getDate() + 1);\r\n            }\r\n        }\r\n        while(this.state.month === current.getMonth());\r\n\r\n        return (\r\n            <Paper style={{maxWidth: 616}}>\r\n                <Typography className={classes.monthHeader}>\r\n                    <IconButton onClick={() => this.move(0, 11, -1)}>\r\n                        <ChevronLeft/>\r\n                    </IconButton>\r\n\r\n                    <span style={{width: 150}}>\r\n                        {monthNames[this.state.month]}\r\n                    </span>\r\n\r\n                    <IconButton onClick={() => this.move(11, 0, 1)}>\r\n                        <ChevronRight/>\r\n                    </IconButton>\r\n                </Typography>\r\n                <Table>\r\n                    {calendar.map((week) => (\r\n                        <TableRow>\r\n                            {week.map((day) => (\r\n                                <TableCell style={{height: '32px', padding: '5px'}}>{day}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    ))}\r\n                </Table>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, { withTheme: 1 }) (Calendar)\r\n","const genID = (day, month, year) =>\r\n{\r\n    let date\r\n    if(month.length>1)\r\n        date = (day + month + year)\r\n    else\r\n        date = (day + '0' + month + year)\r\n\r\n    const md5 = require('md5');\r\n    date = md5(date)\r\n\r\n    let dateNum = \"0\"\r\n    for (let index = 0; index < date.length; index++)\r\n    {\r\n        if('0' <= date[index] && date[index] <= '9')\r\n            dateNum = dateNum + date[index]\r\n    }\r\n\r\n    dateNum = parseInt(dateNum, 10)\r\n\r\n    return dateNum\r\n}\r\n\r\nexport default genID","import React from 'react';\r\nimport PokemonOfTheDay from '../AdditionalContent/PokemonOfTheDayComponent';\r\nimport Calendar from '../AdditionalContent/CalendarComponent';\r\nimport {Container} from '@material-ui/core';\r\nimport List1 from '../../../assets/pokedex.json';\r\nimport List2 from '../../../assets/pokemon.json';\r\nimport {withRouter} from 'react-router-dom';\r\nimport genID from '../../../utils/PokemonOfTheDayGen';\r\n\r\nclass Additional extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.pokemons = List1.map((value, index) => ({\r\n            ...value,\r\n            description: List2[index].description,\r\n        }))\r\n\r\n        this.state = {\r\n\r\n            dayClicked: new Date().getDate(),\r\n            monthClicked: new Date().getMonth(),\r\n            yearClicked: new Date().getFullYear(),\r\n        }\r\n    }\r\n\r\n    dayOnClick = (date) =>\r\n    {\r\n        \r\n        const dateString = `${date.getFullYear()}${(date.getMonth()<10) ? '0' : ''}${date.getMonth()}${(date.getDate()<10) ? '0' : ''}${date.getDate()}`\r\n\r\n        const todayString = `${new Date().getFullYear()}${(new Date().getMonth()<10) ? '0' : ''}${new Date().getMonth()}${(new Date().getDate()<10) ? '0' : ''}${new Date().getDate()}`\r\n\r\n        console.log(dateString)\r\n        console.log(todayString)\r\n        \r\n        if(dateString<=todayString)\r\n        {\r\n            this.setState({\r\n                dayClicked: date.getDate(),\r\n                monthClicked: date.getMonth(),\r\n                yearClicked: date.getFullYear(),\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    handleOpen = (id) =>\r\n    {\r\n        this.props.history.push('/pokedex/' + id)\r\n    }\r\n\r\n    render() {\r\n\r\n        let dateNum = genID(this.state.dayClicked.toLocaleString(), this.state.monthClicked.toLocaleString(), this.state.yearClicked.toLocaleString())\r\n\r\n        return (\r\n            <Container style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>             \r\n                <div style={{marginRight: 30}}>\r\n                    <PokemonOfTheDay\r\n                        pokemon={this.pokemons[dateNum % 151]}\r\n                        handleOpen={this.handleOpen}\r\n                    />\r\n                </div>\r\n                <div style={{marginLeft: 30}}>\r\n                    <Calendar\r\n                        dayClicked={this.state.dayClicked}\r\n                        monthClicked={this.state.monthClicked}\r\n                        yearClicked={this.state.yearClicked}\r\n                        dayOnClick={this.dayOnClick}\r\n                    />\r\n                </div>\r\n            </Container> \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Additional)\r\n","import React from 'react';\r\nimport {Container} from '@material-ui/core';\r\nimport Header from './HeaderComponent';\r\nimport Additional from './AdditionalContent';\r\n\r\nclass Home extends React.Component\r\n{\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Header/>\r\n                <Additional/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Home)","import React from 'react';\r\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst classes = theme => ({\r\n    card: {\r\n        width: 180,\r\n        margin: 10,\r\n        boxShadow: 8,\r\n        borderRadius: 10\r\n    },\r\n\r\n    pokeName: {\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: '1.35mm',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    properties: {\r\n        fontSize: 15,\r\n    }\r\n})\r\n\r\nclass Pokemon extends React.PureComponent {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        return (\r\n            <div>\r\n            <Card \r\n                className={classes.card} \r\n                raised={true} elevation={4} \r\n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\r\n            >\r\n                <CardActionArea>\r\n                    <div style={{height: 170}}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt={this.props.pokemon.name}\r\n                        image={this.props.pokemon.img}  \r\n                    />\r\n                    </div>\r\n                    <CardContent>\r\n                        <Typography className={classes.pokeName}>\r\n                            {this.props.pokemon.name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(withStyles(classes)(Pokemon))","import React from 'react';\r\nimport {Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, Chip} from '@material-ui/core'\r\nimport {green, purple, orange, lightBlue, blue, lightGreen, brown, yellow, pink, grey, red} from '@material-ui/core/colors'\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst classes = theme => ({\r\n    dialogHeader: {\r\n        fontSize: 18,\r\n        textTransform: 'uppercase',\r\n        letterSpacing: theme.spacing(1),\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n\r\n    dialogDesc: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n        fontSize: 15,\r\n        textAlign: 'justify',\r\n        lineHeight: theme.spacing(0.2)\r\n    },\r\n\r\n    chipIns: {\r\n        margin: theme.spacing(0.25),\r\n        letterSpacing: theme.spacing(0.25),\r\n        fontSize: 10,\r\n        textTransform: 'uppercase',\r\n    }\r\n})\r\n\r\nclass Window extends React.Component {\r\n    render() {\r\n        const classes = this.props.classes\r\n\r\n        const associations = {\r\n            \"Bug\":      {label: \"bug\",      color: lightGreen[500]},\r\n            \"Dark\":     {label: \"dark\",     color: grey[800]},\r\n            \"Dragon\":   {label: \"dragon\",   color: blue[800]},\r\n            \"Electric\": {label: \"electric\", color: yellow[500]},\r\n            \"Fairy\":    {label: \"fairy\",    color: pink[300]},\r\n            \"Fighting\": {label: \"fighting\", color: red[500]},\r\n            \"Fire\":     {label: \"fire\",     color: orange[500]},\r\n            \"Flying\":   {label: \"flying\",   color: lightBlue[500]},\r\n            \"Ghost\":    {label: \"ghost\",    color: purple[900]},\r\n            \"Grass\":    {label: \"grass\",    color: green[500]},\r\n            \"Ground\":   {label: \"ground\",   color: brown[700]},\r\n            \"Ice\":      {label: \"ice\",      color: lightBlue[300]},\r\n            \"Normal\":   {label: \"normal\",   color: brown[300]},\r\n            \"Poison\":   {label: \"poison\",   color: purple[500]},\r\n            \"Psychic\":  {label: \"psychic\",  color: pink[500]},\r\n            \"Rock\":     {label: \"rock\",     color: yellow[800]},\r\n            \"Water\":    {label: \"water\",    color: blue[500]},\r\n        }\r\n\r\n        const types = this.props.pokemon.type.map((type) =>\r\n            associations[type]\r\n        )\r\n\r\n        const statsArray = [ ]\r\n        statsArray.push({label: \"Candy\", value: this.props.pokemon.candy})\r\n        if(this.props.pokemon.candy_count)\r\n            statsArray.push({label: \"Candy Count\", value: this.props.pokemon.candy_count})\r\n        statsArray.push({label: \"Egg\", value: this.props.pokemon.egg})\r\n        statsArray.push({label: \"Average Spawns\", value: this.props.pokemon.avg_spawns})\r\n\r\n        return (\r\n            <Dialog onClose={this.props.onClose} open={this.props.ifOpen} >\r\n                <DialogTitle>\r\n                    <span className={classes.dialogHeader}> \r\n                        {this.props.pokemon.name}\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Paper style={{flexGrow: '1'}} className={classes.dialogDesc}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {statsArray.map((stats) =>\r\n                                    <TableRow>\r\n                                        <TableCell>{stats.label}</TableCell>\r\n                                        <TableCell>{stats.value}</TableCell>\r\n                                    </TableRow>)}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>\r\n                        <Paper style={{display: 'flex', flexDirection: \"column\"}} className={classes.dialogDesc}>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <img src={this.props.pokemon.img} alt=\"\"/>\r\n                            </div>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                {types.map((type) =>\r\n                                    <Chip className={classes.chipIns}\r\n                                        label = {type.label}\r\n                                        style={{\r\n                                            backgroundColor: type.color,\r\n                                            color: this.props.theme.palette.getContrastText(type.color)\r\n                                        }}\r\n                                        onClick = {() => this.props.chipOnClick(type.label)}\r\n                                    /> \r\n                                )}\r\n                            </div>\r\n                        </Paper>\r\n                    </div>\r\n                    <Paper className={classes.dialogDesc}>\r\n                        {this.props.pokemon.description}\r\n                    </Paper>\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(classes, {withTheme: 1})(Window)\r\n","import React from 'react';\r\nimport List1 from '../../assets/pokedex.json';\r\nimport List2 from '../../assets/pokemon.json';\r\nimport Pokemon from '../PokemonComponent';\r\nimport {Paper, FilledInput, InputAdornment, IconButton, InputLabel, FormControl} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport Window from '../WindowComponent';\r\nimport {withRouter} from 'react-router-dom';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst classes = theme => ({\r\n    pokeWrapper: {\r\n        maxHeight: 'calc(100vh - 180px)',\r\n        overflow: 'auto',\r\n        margin: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    pokeContent: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n\r\n    title: {\r\n        margin: theme.spacing(3),\r\n        marginLeft: theme.spacing(10),\r\n        letterSpacing: '1.35mm',\r\n        fontSize: 20,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        textTransform: 'uppercase',\r\n    },\r\n\r\n    input: {\r\n        marginLeft: theme.spacing(3),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n})\r\n\r\nclass Pokedex extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.pokemons = List1.map((value, index) => ({\r\n            ...value,\r\n            description: List2[index].description,\r\n        }))\r\n\r\n        this.state = {\r\n            searching: \"\"\r\n        }\r\n    }\r\n\r\n    handleOpen = (id) =>\r\n    {\r\n        this.props.history.push('/pokedex/' + id)\r\n    }\r\n\r\n    handleClose = () =>\r\n    {\r\n        this.props.history.push('/pokedex')\r\n    }\r\n\r\n    handleChange = (event) =>\r\n    {\r\n        this.setState({\r\n            searching: event.target.value\r\n        })\r\n    }\r\n\r\n    chipClick = (label) =>\r\n    {\r\n        this.setState({\r\n            searching: label\r\n        })\r\n\r\n        this.props.history.push('/pokedex');\r\n    }\r\n\r\n    handleClear = () =>\r\n    {\r\n        this.setState({\r\n            searching: \"\" \r\n        })\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes\r\n        let openPokemon = this.props.match.params.id\r\n        let ifOpen = false\r\n        if(openPokemon)\r\n        {\r\n            ifOpen = true;\r\n        }\r\n        else\r\n        {\r\n            openPokemon = 1;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <FormControl className={classes.input}>\r\n                    <InputLabel style={{marginLeft: \"20px\"}}>Search</InputLabel>\r\n                    <FilledInput\r\n                        value={this.state.searching}\r\n                        onChange={this.handleChange}\r\n                        margin=\"none\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick = {this.handleClear}>\r\n                                    <ClearIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                \r\n                <div className={classes.pokeWrapper}>\r\n                    <Scrollbars\r\n                        autoHide\r\n                        autoHideTimeout={1000}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"calc(100vh - 180px)\",\r\n                        }} \r\n                    >\r\n                        <Paper className={classes.pokeContent}>\r\n                            {this.pokemons.filter((pokemon) => (pokemon.name.toLowerCase().includes(this.state.searching.toLocaleLowerCase()) || pokemon.type.some((type) => type.toLowerCase().includes(this.state.searching.toLocaleLowerCase())))).map((pokemon) => (\r\n                                <Pokemon key = {pokemon.id} pokemon={pokemon} handleOpen={this.handleOpen}/>\r\n                            ))}\r\n                        </Paper>\r\n                    </Scrollbars>\r\n                    <Window\r\n                        pokemon={this.pokemons[openPokemon]}\r\n                        ifOpen={ifOpen}\r\n                        onClose={this.handleClose}\r\n                        chipOnClick={this.chipClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(classes)(Pokedex))","import Home from '../components/HomeComponent';\r\nimport Pokedex from '../components/PokedexComponent';\r\n\r\nconst routes = [\r\n    {path: '/home', component: Home},\r\n    {path: '/pokedex/:id?', component: Pokedex, exact: false},\r\n]\r\n\r\nexport {routes}","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Spadaj Dziadu\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {routes} from './routes';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport NotFound from '../components/NotFoundComponent'\r\n\r\nexport default class Routes extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    {routes.map(r => (\r\n                        <Route\r\n                            key = {r.path}\r\n                            exact = {r.exact}\r\n                            path = {r.path}\r\n                            component = {r.component}\r\n                        />\r\n                    ))}\r\n\r\n                    <Route exact path = '/404' component = {NotFound}/>\r\n                    <Route exact path = '/'>\r\n                        <Redirect to = '/home'/>\r\n                    </Route>\r\n                    <Route path = \"*\">\r\n                        <Redirect to = '/404' />\r\n                    </Route>\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Menu from '../MenuComponent'\r\nimport Routes from '../../routes/RoutesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { colors, CssBaseline } from '@material-ui/core';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        },\r\n        calendarColorPrim: colors.grey[700],\r\n        calendarColorSec: colors.grey[400]\r\n    }\r\n})\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: colors.orange,\r\n        secondary: {\r\n            main: colors.yellow[500],\r\n        },\r\n        calendarColorPrim: colors.grey[400],\r\n        calendarColorSec: colors.grey[700]\r\n    }\r\n})\r\n\r\nexport default class App extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            theme: lightTheme\r\n        }\r\n    }\r\n\r\n    changeTheme = () =>\r\n    {\r\n        if(this.state.theme === darkTheme)\r\n        {\r\n            this.setState({\r\n                theme: lightTheme\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                theme: darkTheme\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Router >\r\n            <ThemeProvider theme={this.state.theme}>\r\n            <CssBaseline/>\r\n                <Menu changeTheme={this.changeTheme}/>\r\n                <Routes/>\r\n            </ThemeProvider>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/AppComponent';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}