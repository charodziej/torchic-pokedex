{"version":3,"sources":["assets/Torchic1.png","components/ClockComponent/index.js","components/MenuComponent/index.js","components/HomeComponent/HeaderComponent/index.js","components/HomeComponent/index.js","components/PokemonComponent/index.js","components/WindowComponent/index.js","components/PokedexComponent/index.js","routes/routes.js","components/NotFoundComponent/index.js","routes/RoutesComponent.js","components/AppComponent/index.js","utils/serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","time","Date","toLocaleString","hours","getHours","minutes","getMinutes","seconds","getSeconds","this","intervalID","setInterval","tick","clearInterval","setState","Typography","length","React","Component","Menu","AppBar","position","Toolbar","to","IconButton","style","marginRight","Button","letterSpacing","marginLeft","Language","onClick","changeTheme","theme","palette","type","Brightness4","Brightness7","withStyles","withTheme","Header","classes","Container","maxWidth","className","content","src","Torchic1","alt","logo","text","title","textDecoration","color","paddingTop","spacing","paddingBottom","flexDirection","alignItems","textAlign","display","breakpoints","down","flexShrink","height","fontSize","fontWeight","typography","fontWeightLight","lineHeight","Home","Pokemon","ref","forwardedRef","width","inViewport","Card","card","raised","elevation","handleOpen","pokemon","id","CardActionArea","CardMedia","component","name","image","img","CardContent","pokeName","PureComponent","handleViewport","margin","padding","boxShadow","borderRadius","textTransform","properties","Window","associations","label","lightGreen","grey","blue","yellow","pink","red","orange","lightBlue","purple","green","brown","types","map","statsArray","push","value","candy","candy_count","egg","avg_spawns","Dialog","onClose","open","ifOpen","DialogTitle","dialogHeader","DialogContent","Paper","flexGrow","dialogDesc","Table","TableBody","stats","TableRow","TableCell","justifyContent","Chip","chipIns","backgroundColor","getContrastText","chipOnClick","description","Pokedex","history","handleClose","handleChange","event","searching","target","chipClick","handleClear","pokemons","List1","index","List2","openPokemon","match","params","FormControl","input","InputLabel","FilledInput","onChange","endAdornment","InputAdornment","pokeWrapper","autoHide","autoHideTimeout","pokeContent","filter","toLowerCase","includes","toLocaleLowerCase","some","key","routes","path","withRouter","maxHeight","overflow","marginBottom","flexWrap","marginTop","exact","NotFound","Routes","Fragment","r","lightTheme","createMuiTheme","primary","colors","secondary","main","darkTheme","App","basename","ThemeProvider","CssBaseline","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8573c5ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Torchic1.28c52578.png\";","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default class Clock extends React.Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleString(),\n            hours: new Date().getHours().toLocaleString(),\n            minutes: new Date().getMinutes().toLocaleString(),\n            seconds: new Date().getSeconds().toLocaleString()\n        };\n    }\n\n    componentDidMount()\n    {\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount()\n    {\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time: new Date().toLocaleString(),\n            hours: new Date().getHours().toLocaleString(),\n            minutes: new Date().getMinutes().toLocaleString(),\n            seconds: new Date().getSeconds().toLocaleString()\n      });\n    }\n\n    render()\n    {        \n        return (\n            <Typography>\n                {(this.state.hours.length === 1) ? (\"0\") : (\"\")}{this.state.hours}:\n                {(this.state.minutes.length === 1) ? (\"0\") : (\"\")}{this.state.minutes}:\n                {(this.state.seconds.length === 1) ? (\"0\") : (\"\")}{this.state.seconds}\n            </Typography>\n      );\n    }\n  }","import React from 'react';\nimport {AppBar, Button, Toolbar, Typography, IconButton, withStyles} from '@material-ui/core';\nimport {Home, Language, Brightness7, Brightness4} from '@material-ui/icons';\nimport {Link} from 'react-router-dom';\n/*import ClockLib from 'react-live-clock';*/\nimport Clock from '../ClockComponent';\n\nclass Menu extends React.Component\n{\n    render() {\n        let spacing = 15;\n        return(\n            <div>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Link to='/home'>\n                            <IconButton style = {{marginRight: spacing}}>\n                                <Home/>\n                            </IconButton>\n                        </Link>\n                        <Link to='/pokedex'>\n                            <Button style = {{letterSpacing: '1mm'}}>\n                                Pokédex\n                            </Button>\n                        </Link>\n                        <IconButton style = {{marginLeft: \"auto\", marginRight: spacing}}>\n                            <Language/>\n                        </IconButton>\n                        <IconButton style = {{marginRight: spacing}} onClick = {this.props.changeTheme}>\n                            {(this.props.theme.palette.type === \"light\") ? (<Brightness4/>) : (<Brightness7/>)}\n                        </IconButton>\n                        <Typography>\n                            {/*<ClockLib format={'HH:mm:ss'} ticking={true} timezone={'PL/Europe'} />*/}\n                            <Clock/>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}\n\nexport default withStyles({ }, {withTheme: 1})(Menu);\n\n","import React from 'react';\nimport Torchic1 from '../../../assets/Torchic1.png';\nimport {Container} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\n\nconst classes = theme => ({\n\n    content: {\n        paddingTop: theme.spacing(10),\n        paddingBottom: theme.spacing(10),\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        textAlign: 'center',\n        display: 'flex',\n\n        [theme.breakpoints.down('md')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(8),\n            textAlign: 'center',\n        },\n      },\n\n    logo: {\n        flexShrink: 0,\n        marginRight: theme.spacing(3),\n        height: 200,\n        \n        [theme.breakpoints.down('md')]: {\n            height: 120,\n        },\n    },\n\n    text: {\n        letterSpacing: '1.35mm',\n        fontSize: 20,\n        fontWeight: theme.typography.fontWeightLight,\n        lineHeight: '40px',\n        textAlign: 'left',\n\n        [theme.breakpoints.down('md')]:{\n            fontSize: 15,\n            textAlign: 'center',\n        }\n    },\n\n    title: {\n        fontWeight: theme.typography.fontWeightLight,\n        fontSize: 40,\n\n        [theme.breakpoints.down('md')]:{\n            fontSize: 25,\n        }\n    }\n})\n\nclass Header extends React.Component\n{\n    render() {\n        const classes = this.props.classes\n        return (\n            <Container maxWidth='md' className={classes.content}>\n                <img src={Torchic1} alt=\"\" className={classes.logo}/>\n                <Container className={classes.text}>\n                    <h1 className={classes.title}>Torchic Pokédex</h1>\n                    Want to know everything about every Pokémon? <br/>\n                    Check out our <Link to='/pokedex' style={{textDecoration: 'none', color: \"#ffc107\"}}>Pokédex</Link> - tips &amp; tricks all day!\n                </Container>\n            </Container>\n        )\n    }\n}\n\nexport default withStyles(classes)(Header)","import React from 'react';\nimport {Container} from '@material-ui/core';\nimport Header from './HeaderComponent';\n\nclass Home extends React.Component\n{\n    render() {\n        return (\n            <Container>\n                <Header/>\n            </Container>\n        )\n    }\n}\n\nexport default (Home)","import React from 'react';\nimport {Card, CardActionArea, CardMedia, CardContent, Typography} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles';\nimport handleViewport from 'react-in-viewport'\n\nconst classes = theme => ({\n    card: {\n        width: 180,\n        margin: 10,\n        padding: 5,\n        boxShadow: 8,\n        borderRadius: 10\n    },\n\n    pokeName: {\n        fontSize: 12,\n        textTransform: 'uppercase',\n        letterSpacing: '1.35mm',\n        textAlign: 'center',\n        alignItems: 'center',\n    },\n\n    properties: {\n        fontSize: 15,\n    }\n})\n\nclass Pokemon extends React.PureComponent {\n    render() {\n        const classes = this.props.classes\n\n        return (\n            <div ref={this.props.forwardedRef} style={{width: 200, height:250}}>\n            {this.props.inViewport &&\n            <Card \n                className={classes.card} \n                raised={true} elevation={4} \n                onClick={() => this.props.handleOpen(this.props.pokemon.id-1)}\n            >\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        alt={this.props.pokemon.name}\n                        image={this.props.pokemon.img}\n                        style={{height: 170}}\n                    />\n                    <CardContent>\n                        <Typography className={classes.pokeName}>\n                            {this.props.pokemon.name}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card> \n            }\n            </div>\n        )\n    }\n}\nexport default handleViewport(withStyles(classes)(Pokemon))","import React from 'react';\nimport {Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, Chip} from '@material-ui/core'\nimport {green, purple, orange, lightBlue, blue, lightGreen, brown, yellow, pink, grey, red} from '@material-ui/core/colors'\nimport {withStyles} from '@material-ui/core/styles';\n\nconst classes = theme => ({\n    dialogHeader: {\n        fontSize: 18,\n        textTransform: 'uppercase',\n        letterSpacing: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightLight,\n        marginLeft: theme.spacing(1)\n    },\n\n    dialogDesc: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(2),\n        fontSize: 15,\n        textAlign: 'justify',\n        lineHeight: theme.spacing(0.2)\n    },\n\n    chipIns: {\n        margin: theme.spacing(0.25),\n        letterSpacing: theme.spacing(0.25),\n        fontSize: 10,\n        textTransform: 'uppercase',\n    }\n})\n\nclass Window extends React.Component {\n    render() {\n        const classes = this.props.classes\n\n        const associations = {\n            \"Bug\":      {label: \"bug\",      color: lightGreen[500]},\n            \"Dark\":     {label: \"dark\",     color: grey[800]},\n            \"Dragon\":   {label: \"dragon\",   color: blue[800]},\n            \"Electric\": {label: \"electric\", color: yellow[500]},\n            \"Fairy\":    {label: \"fairy\",    color: pink[300]},\n            \"Fighting\": {label: \"fighting\", color: red[500]},\n            \"Fire\":     {label: \"fire\",     color: orange[500]},\n            \"Flying\":   {label: \"flying\",   color: lightBlue[500]},\n            \"Ghost\":    {label: \"ghost\",    color: purple[900]},\n            \"Grass\":    {label: \"grass\",    color: green[500]},\n            \"Ground\":   {label: \"ground\",   color: brown[700]},\n            \"Ice\":      {label: \"ice\",      color: lightBlue[300]},\n            \"Normal\":   {label: \"normal\",   color: brown[300]},\n            \"Poison\":   {label: \"poison\",   color: purple[500]},\n            \"Psychic\":  {label: \"psychic\",  color: pink[500]},\n            \"Rock\":     {label: \"rock\",     color: yellow[800]},\n            \"Water\":    {label: \"water\",    color: blue[500]},\n        }\n\n        const types = this.props.pokemon.type.map((type) =>\n            associations[type]\n        )\n\n        const statsArray = [ ]\n        statsArray.push({label: \"Candy\", value: this.props.pokemon.candy})\n        if(this.props.pokemon.candy_count)\n            statsArray.push({label: \"Candy Count\", value: this.props.pokemon.candy_count})\n        statsArray.push({label: \"Egg\", value: this.props.pokemon.egg})\n        statsArray.push({label: \"Average Spawns\", value: this.props.pokemon.avg_spawns})\n\n        return (\n            <Dialog onClose={this.props.onClose} open={this.props.ifOpen} >\n                <DialogTitle>\n                    <span className={classes.dialogHeader}> \n                        {this.props.pokemon.name}\n                    </span>\n                </DialogTitle>\n                <DialogContent>\n                    <div style={{display: 'flex'}}>\n                        <Paper style={{flexGrow: '1'}} className={classes.dialogDesc}>\n                            <Table>\n                                <TableBody>\n                                    {statsArray.map((stats) =>\n                                    <TableRow>\n                                        <TableCell>{stats.label}</TableCell>\n                                        <TableCell>{stats.value}</TableCell>\n                                    </TableRow>)}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <Paper style={{display: 'flex', flexDirection: \"column\"}} className={classes.dialogDesc}>\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\n                                <img src={this.props.pokemon.img} alt=\"\"/>\n                            </div>\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\n                                {types.map((type) =>\n                                    <Chip className={classes.chipIns}\n                                        label = {type.label}\n                                        style={{\n                                            backgroundColor: type.color,\n                                            color: this.props.theme.palette.getContrastText(type.color)\n                                        }}\n                                        onClick = {() => this.props.chipOnClick(type.label)}\n                                    /> \n                                )}\n                            </div>\n                        </Paper>\n                    </div>\n                    <Paper className={classes.dialogDesc}>\n                        {this.props.pokemon.description}\n                    </Paper>\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nexport default withStyles(classes, {withTheme: 1})(Window)\n","import React from 'react';\nimport List1 from '../../assets/pokedex.json';\nimport List2 from '../../assets/pokemon.json';\nimport Pokemon from '../PokemonComponent';\nimport {Paper, FilledInput, InputAdornment, IconButton, InputLabel, FormControl} from '@material-ui/core';\nimport {withStyles} from '@material-ui/core/styles';\nimport Scrollbars from 'react-custom-scrollbars';\nimport Window from '../WindowComponent';\nimport {withRouter} from 'react-router-dom';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst classes = theme => ({\n    pokeWrapper: {\n        maxHeight: 'calc(100vh - 180px)',\n        overflow: 'auto',\n        margin: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n\n    pokeContent: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n\n    title: {\n        margin: theme.spacing(3),\n        marginLeft: theme.spacing(10),\n        letterSpacing: '1.35mm',\n        fontSize: 20,\n        fontWeight: theme.typography.fontWeightLight,\n        textTransform: 'uppercase',\n    },\n\n    input: {\n        marginLeft: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n})\n\nclass Pokedex extends React.Component {\n    constructor(props) {\n        super(props)\n        this.pokemons = List1.map((value, index) => ({\n            ...value,\n            description: List2[index].description,\n        }))\n\n        this.state = {\n            searching: \"\"\n        }\n    }\n\n    handleOpen = (id) =>\n    {\n        this.props.history.push('/pokedex/' + id)\n    }\n\n    handleClose = () =>\n    {\n        this.props.history.push('/pokedex')\n    }\n\n    handleChange = (event) =>\n    {\n        this.setState({\n            searching: event.target.value\n        })\n    }\n\n    chipClick = (label) =>\n    {\n        this.setState({\n            searching: label\n        })\n\n        this.props.history.push('/pokedex');\n    }\n\n    handleClear = () =>\n    {\n        this.setState({\n            searching: \"\" \n        })\n    }\n\n    render() {\n        const classes = this.props.classes\n        let openPokemon = this.props.match.params.id\n        let ifOpen = false\n        if(openPokemon)\n        {\n            ifOpen = true;\n        }\n        else\n        {\n            openPokemon = 1;\n        }\n\n        return (\n            <div>\n                <FormControl className={classes.input}>\n                    <InputLabel style={{marginLeft: \"20px\"}}>Search</InputLabel>\n                    <FilledInput\n                        value={this.state.searching}\n                        onChange={this.handleChange}\n                        margin=\"none\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton onClick = {this.handleClear}>\n                                    <ClearIcon/>\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                \n                <div className={classes.pokeWrapper}>\n                    <Scrollbars\n                        autoHide\n                        autoHideTimeout={1000}\n                        style={{\n                            width: \"100%\",\n                            height: \"calc(100vh - 180px)\",\n                        }} \n                    >\n                        <Paper className={classes.pokeContent}>\n                            {this.pokemons.filter((pokemon) => (pokemon.name.toLowerCase().includes(this.state.searching.toLocaleLowerCase()) || pokemon.type.some((type) => type.toLowerCase().includes(this.state.searching.toLocaleLowerCase())))).map((pokemon) => (\n                                <Pokemon key = {pokemon.id} pokemon={pokemon} handleOpen={this.handleOpen}/>\n                            ))}\n                        </Paper>\n                    </Scrollbars>\n                    <Window\n                        pokemon={this.pokemons[openPokemon]}\n                        ifOpen={ifOpen}\n                        onClose={this.handleClose}\n                        chipOnClick={this.chipClick}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(withStyles(classes)(Pokedex))","import Home from '../components/HomeComponent';\nimport Pokedex from '../components/PokedexComponent';\n\nconst routes = [\n    {path: '/home', component: Home},\n    {path: '/pokedex/:id?', component: Pokedex, exact: false},\n]\n\nexport {routes}","import React from 'react'\n\nexport default class NotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                Spadaj Dziadu\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {routes} from './routes';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport NotFound from '../components/NotFoundComponent'\n\nexport default class Routes extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Switch>\n                    {routes.map(r => (\n                        <Route\n                            key = {r.path}\n                            exact = {r.exact}\n                            path = {r.path}\n                            component = {r.component}\n                        />\n                    ))}\n\n                    <Route exact path = '/404' component = {NotFound}/>\n                    <Route exact path = '/'>\n                        <Redirect to = '/home'/>\n                    </Route>\n                    <Route path = \"*\">\n                        <Redirect to = '/404' />\n                    </Route>\n                </Switch>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport Menu from '../MenuComponent'\nimport Routes from '../../routes/RoutesComponent';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { colors, CssBaseline } from '@material-ui/core';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: \"light\",\n        primary: colors.orange,\n        secondary: {\n            main: colors.yellow[500],\n        }\n    }\n})\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: colors.orange,\n        secondary: {\n            main: colors.yellow[500],\n        }\n    }\n})\n\nexport default class App extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            theme: lightTheme\n        }\n    }\n\n    changeTheme = () =>\n    {\n        if(this.state.theme === darkTheme)\n        {\n            this.setState({\n                theme: lightTheme\n            })\n        }\n        else\n        {\n            this.setState({\n                theme: darkTheme\n            })\n        }\n    }\n    \n    render() {\n        return(\n            <Router basename=\"/torchic-pokedex\">\n            <ThemeProvider theme={this.state.theme}>\n            <CssBaseline/>\n                <Menu changeTheme={this.changeTheme}/>\n                <Routes/>\n            </ThemeProvider>\n            </Router>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/AppComponent';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}